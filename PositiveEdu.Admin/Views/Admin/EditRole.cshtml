@using PositiveEdu.DAL
@model ROLE
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>修改角色</h2>
        <ol class="breadcrumb">
            <li>
                <a href="###">账户及权限</a>
            </li>
            <li>
                <a href="@Url.Action("Index")">管理角色</a>
            </li>
            <li class="active">
                <strong>修改角色</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>
<div class="wrapper wrapper-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>修改角色</h5>
                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm("EditRole", "Admin", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("id", Model.UUID)

                        <div class="form-group">
                            <label class="col-sm-2 control-label">角色名</label>
                            <div class="col-sm-10"><input type="text" class="form-control" name="name" value="@Model.NAME"></div>
                        </div>

                        <div class="hr-line-dashed"></div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">配置权限</label>
                            <div class="col-sm-10">
                                @{
                                    var functions = (List<ROLE_FUNCTIONS>)ViewBag.Functions;
                                    var roots = functions.Where(x => x.TYPE == 0).OrderBy(x => x.SORT).ToList();

                                    foreach (var root in roots)
                                    {
                                        var children = functions.Where(x => x.PARENT == root.UUID).OrderBy(x => x.SORT).ToList();

                                        <div class="panel panel-default">
                                            <div class="panel-heading">
                                                @root.NAME
                                            </div>
                                            <div class="panel-body">
                                                @foreach (var menu in children)
                                                {
                                                    <div class="i-checks checkbox-inline">
                                                        <label> <input type="checkbox" value="@menu.UUID" name="function" @Html.BoolString(Model.ROLE_FUNCTION_RELATION.Any(x=>x.FUNCTION_ID == menu.UUID), "checked=\"checked\"")> <i></i> @menu.NAME </label>
                                                    </div>
                                                }
                                            </div>

                                        </div>
                                    }
                                }
                            </div>
                        </div>

                        <div class="hr-line-dashed"></div>
                        <div class="form-group">
                            <div class="col-sm-4 col-sm-offset-2">
                                <a href="@Url.Action("Index")" class="btn btn-white">返回</a>
                                <button class="btn btn-primary" type="submit">保存</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        $(function () {
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });
        });
    </script>
}
